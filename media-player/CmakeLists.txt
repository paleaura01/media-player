cmake_minimum_required(VERSION 3.16)
project(media_player)

set(CMAKE_GENERATOR "Ninja")
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# Disable Windows min/max macros.
add_compile_definitions(NOMINMAX)

# Find SDL2 and related libraries.
find_package(SDL2 CONFIG REQUIRED)
find_package(SDL2_ttf CONFIG REQUIRED)
find_package(SDL2_mixer CONFIG REQUIRED)
find_package(SDL2_image CONFIG REQUIRED)

# Locate FFmpeg libraries
find_library(AVFORMAT_LIB avformat)
find_library(AVCODEC_LIB avcodec)
find_library(AVUTIL_LIB avutil)
find_library(SWSCALE_LIB swscale)
find_library(SWRESAMPLE_LIB swresample)

add_executable(media_player
    src/main.cpp
    src/player.cpp            # The "orchestrator"
    src/player_ui.cpp         # UI code
    src/player_playlists.cpp  # Playlist code
    src/player_audio.cpp      # Audio code
    src/bluetooth_server.cpp
    src/protocol.cpp
    src/state_manager.cpp
)

# Enable unity builds for faster compile times.
set_target_properties(media_player PROPERTIES UNITY_BUILD ON)

# On Windows, hide the console if desired.
if(MSVC)
    set_target_properties(media_player PROPERTIES WIN32_EXECUTABLE TRUE)
    add_compile_options(/MP)  # Enable parallel compilation in MSVC.
endif()

if(WIN32)
    target_sources(media_player PRIVATE ${CMAKE_SOURCE_DIR}/icon.rc)
endif()

target_link_libraries(media_player PRIVATE
    SDL2::SDL2
    SDL2_ttf::SDL2_ttf
    SDL2_mixer::SDL2_mixer
    SDL2_image::SDL2_image
    ${AVFORMAT_LIB}
    ${AVCODEC_LIB}
    ${AVUTIL_LIB}
    ${SWSCALE_LIB}
    ${SWRESAMPLE_LIB}
)

add_custom_command(TARGET media_player POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_SOURCE_DIR}/dist/assets
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/assets/icon.ico ${CMAKE_SOURCE_DIR}/dist/assets/icon.ico
    COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:media_player> ${CMAKE_SOURCE_DIR}/dist/
)
if(EXISTS "${CMAKE_SOURCE_DIR}/assets/icon.png")
    add_custom_command(TARGET media_player POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/assets/icon.png ${CMAKE_SOURCE_DIR}/dist/assets/icon.png
    )
endif()

install(TARGETS media_player RUNTIME DESTINATION .)
